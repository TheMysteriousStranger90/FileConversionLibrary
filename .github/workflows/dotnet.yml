# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest    
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # fetch-depth is needed for GitVersion
        
    # Install and calculate the new version with GitVersion  
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7
      id: gitversion # step id used as reference for output values
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    
    # Build/pack the project
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore FileConversionLibrary/FileConversionLibrary.csproj
    - name: Build the project
      run: dotnet build FileConversionLibrary/FileConversionLibrary.csproj -c Release
    - name: Pack the NuGet package
      run: dotnet pack FileConversionLibrary/FileConversionLibrary.csproj -p:Version='${{ steps.gitversion.outputs.SemVer }}' -c Release
    - name: Upload NuGet package as artifact
      uses: actions/upload-artifact@v4
      with:
        name: nugetPackage
        path: FileConversionLibrary/FileConversionLibrary/bin/Release/
